{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["highchartsMap","Highcharts","window","proj4","mapOptions","chart","map","title","text","credits","enabled","mapNavigation","tooltip","headerFormat","pointFormat","series","name","mapData","mapDataCU","borderColor","nullColor","showInLegend","type","color","data","z","keyword","lat","lon","cursor","point","events","click","console","log","this","App","className","constructorType","highcharts","options","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAOAA,IAAcC,KAEQ,qBAAXC,SACTA,OAAOC,MAAQD,OAAOC,OAASA,KAEjC,IAAMC,EAAa,CACjBC,MAAO,CACLC,IAAK,uBAEPC,MAAO,CACLC,KAAM,YAERC,QAAS,CACLC,SAAS,GAEbC,cAAe,CACbD,SAAS,GAEbE,QAAS,CACLC,aAAc,GACdC,YAAa,6GAEfC,OAAQ,CAAC,CAEPC,KAAM,UACNC,QAASC,EACTC,YAAa,UACbC,UAAW,2BACXC,cAAc,GACb,CAEDC,KAAM,YACNN,KAAM,SACNO,MAAO,UACPC,KAAM,CAAC,CAAEC,EAAG,GAAIC,QAAS,SAAUC,IAAK,MAAOC,KAAM,MAC9C,CAAEH,EAAG,EAAGC,QAAS,SAAUC,IAAK,MAAOC,KAAM,OACpDC,OAAQ,UACRC,MAAO,CACLC,OAAQ,CACNC,MAAO,WACLC,QAAQC,IAAIC,KAAKT,eAkBZU,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,gBAAkB,WAClBC,WAAYtC,IACZuC,QAASpC,OC/CFqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,cAM1Bb,M","file":"static/js/main.6b0cdc5f.chunk.js","sourcesContent":["import './App.css';\nimport Highcharts from 'highcharts/highstock'\nimport HighchartsReact from 'highcharts-react-official'\nimport highchartsMap from \"highcharts/modules/map\"\nimport proj4 from \"proj4\";\nimport mapDataCU from \"@highcharts/map-collection/countries/cu/cu-all.geo.json\";\n\nhighchartsMap(Highcharts);\n\nif (typeof window !== \"undefined\") {\n  window.proj4 = window.proj4 || proj4;\n}\nconst mapOptions = {\n  chart: {\n    map: 'countries/cu/cu-all'\n  },\n  title: {\n    text: 'Map Demo'\n  },\n  credits: {\n      enabled: false\n  },\n  mapNavigation: {\n    enabled: true\n  },\ntooltip: {\n    headerFormat: '',\n    pointFormat: '<b>{point.freq}</b><br><b>{point.keyword}</b>                      <br>lat: {point.lat}, lon: {point.lon}'\n  },\n  series: [{\n    // Use the gb-all map with no data as a basemap\n    name: 'Basemap',\n    mapData: mapDataCU,\n    borderColor: '#A0A0A0',\n    nullColor: 'rgba(200, 200, 200, 0.3)',\n    showInLegend: false\n  }, {\n    // Specify points using lat/lon\n    type: 'mapbubble',\n    name: 'Cities',\n    color: '#4169E1',\n    data: [{ z: 10, keyword: \"Galway\", lat: 53.27, lon: -9.25 }, \n           { z: 4, keyword: \"Dublin\", lat: 53.27, lon: -6.25 }],\n    cursor: 'pointer',\n    point: {\n      events: {\n        click: function() {\n          console.log(this.keyword);\n        }\n      }\n    }\n  }]\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HighchartsReact\n        constructorType ={'mapChart'}\n        highcharts={Highcharts}\n        options={mapOptions}\n      />     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('react-app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}